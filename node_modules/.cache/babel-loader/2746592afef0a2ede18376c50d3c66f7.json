{"ast":null,"code":"var _jsxFileName = \"/Users/quipper/Documents/quipper/my-app/src/Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\nexport class Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeInput = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let minLength = event.target.minLength;\n\n      if (val.length < minLength) {\n        let error = nam + 'Error';\n        this.setState({\n          [error]: true,\n          formValidated: true\n        });\n      } else {\n        this.setState({\n          [nam]: val,\n          formValidated: false\n        });\n      }\n    };\n\n    this.state = {\n      id: props.id,\n      name: props.name || '',\n      model: props.model || '',\n      nameError: false,\n      modelError: false,\n      formValidated: false\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      minLength: 5,\n      value: this.state.name,\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.nameError ? \"name kurang\" : null), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Model:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"model\",\n      name: \"model\",\n      minLength: 5,\n      value: this.state.model,\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.modelError ? \"model kurang\" : null)), React.createElement(Button, {\n      labelBtn: \"Save\",\n      disabled: this.formValidated,\n      handleBtn: () => handleSubmit(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\nForm.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  model: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\nForm.defaultProps = {\n  id: new Date()\n};","map":{"version":3,"sources":["/Users/quipper/Documents/quipper/my-app/src/Form.js"],"names":["React","Component","PropTypes","Button","Form","constructor","props","onChangeInput","event","nam","target","name","val","value","minLength","length","error","setState","formValidated","state","id","model","nameError","modelError","bind","render","handleSubmit","propTypes","any","string","func","isRequired","defaultProps","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\n\nexport class Form extends Component{\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      id: props.id,\n      name: props.name || '',\n      model: props.model || '',\n      nameError: false,\n      modelError: false,\n      formValidated: false\n    }\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  onChangeInput = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    let minLength = event.target.minLength;\n    \n    if(val.length < minLength) {\n      let error = nam + 'Error';\n      this.setState({ [error]: true, formValidated: true })\n    }\n    else {\n      this.setState({ [nam]: val, formValidated: false });\n    }\n  }\n\n  render() {\n    const { handleSubmit } = this.props\n    return (\n      <div>\n        <form>\n          <label>Name:</label>\n          <input type=\"text\" placeholder=\"name\" name=\"name\" minLength={5} value={this.state.name} onChange={this.onChangeInput} />\n          <span >{ this.state.nameError ? \"name kurang\" : null}</span>\n          <label>Model:</label>\n          <input type=\"text\" placeholder=\"model\" name=\"model\" minLength={5} value={this.state.model} onChange={this.onChangeInput} />\n          <span >{ this.state.modelError ? \"model kurang\" : null}</span>\n        </form>\n        <Button labelBtn=\"Save\" disabled={this.formValidated} handleBtn={() => handleSubmit(this.state) } />\n      </div>\n    )\n  }\n\n}\nForm.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  model: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nForm.defaultProps = {\n  id: new Date()\n};\n"]},"metadata":{},"sourceType":"module"}