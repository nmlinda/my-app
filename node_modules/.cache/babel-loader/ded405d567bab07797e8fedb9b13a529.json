{"ast":null,"code":"var _jsxFileName = \"/Users/quipper/Documents/quipper/my-app/src/Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\nexport class Form extends Component {\n  constructor(props) {\n    super(props); // const id = props.id ? props.id : new Date();\n\n    this.onChangeInput = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.state = {\n      id: props.id,\n      name: props.name || '',\n      model: props.model || ''\n    };\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  validateEmail(email) {\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    const result = pattern.test(email);\n\n    if (result === true) {\n      this.setState({\n        emailError: false,\n        email: email\n      });\n    } else {\n      this.setState({\n        emailError: true\n      });\n    }\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Model:\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"model\",\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.onChangeInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Button, {\n      labelBtn: \"Save\",\n      handleBtn: () => handleSubmit(this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\nForm.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  model: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\nForm.defaultProps = {\n  id: new Date()\n};","map":{"version":3,"sources":["/Users/quipper/Documents/quipper/my-app/src/Form.js"],"names":["React","Component","PropTypes","Button","Form","constructor","props","onChangeInput","event","nam","target","name","val","value","setState","state","id","model","bind","validateEmail","email","pattern","result","test","emailError","render","handleSubmit","propTypes","any","string","func","isRequired","defaultProps","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from './Button';\n\nexport class Form extends Component{\n  \n  constructor(props){\n    super(props);\n    // const id = props.id ? props.id : new Date();\n    this.state = {\n      id: props.id,\n      name: props.name || '',\n      model: props.model || '',\n    }\n    this.onChangeInput = this.onChangeInput.bind(this);\n  }\n\n  validateEmail(email){\n    const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n    const result = pattern.test(email);\n    if(result === true){\n      this.setState({\n        emailError:false,\n        email:email\n      })\n    } else{\n      this.setState({\n        emailError:true\n      })\n    }\n  }  \n\n  onChangeInput = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n  render() {\n    const { handleSubmit } = this.props\n    return (\n      <div>\n        <form>\n          <label>Name:</label>\n          <input type=\"text\" placeholder=\"name\" name=\"name\" value={this.state.name} onChange={this.onChangeInput} />\n          <label>Model:</label>\n          <input type=\"text\" placeholder=\"model\" name=\"model\" value={this.state.model} onChange={this.onChangeInput} />\n        </form>\n        <Button labelBtn=\"Save\" handleBtn={() => handleSubmit(this.state) } />\n      </div>\n    )\n  }\n\n}\nForm.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.string,\n  model: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\n\nForm.defaultProps = {\n  id: new Date()\n};\n"]},"metadata":{},"sourceType":"module"}